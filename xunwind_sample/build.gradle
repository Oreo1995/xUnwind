apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    ndkVersion rootProject.ext.ndkVersion
    defaultConfig {
        applicationId "io.hexhacking.xunwind.sample"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        ndk {
            abiFilters rootProject.ext.abiFilters.split(",")
        }
    }
    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version rootProject.ext.cmakeVersion
        }
    }
    compileOptions {
        sourceCompatibility rootProject.ext.javaVersion
        targetCompatibility rootProject.ext.javaVersion
    }
    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled false
        }
    }
    buildFeatures {
        prefab true
    }
    packagingOptions {
        pickFirst '**/libxunwind.so'
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    implementation project(':xunwind')
//    implementation 'io.hexhacking:xunwind:1.0.2'
}

// Bypass the compatibility issue between prefab and gradle-project-dependencies.
// Note: This is not required for gradle-maven-dependencies.
tasks.whenTaskAdded { task ->
    if (task.name == 'generateJsonModelDebug') {
        task.dependsOn(':xunwind:prefabDebugPackage')
    }
    else if (task.name == 'generateJsonModelRelease') {
        task.dependsOn(':xunwind:prefabReleasePackage')
    }
}

apply from: rootProject.file('gradle/sanitizer.gradle')
